name: Publish NuGet Package to GitHub Packages

on:
  push:
    branches:
      - nuget

env:
  DISCORD_WEBHOOK: https://discordapp.com/api/webhooks/1402490419530432665/hFcn7hExzZ20MgLpbmGjdF4cwu3YpB5z4k5G01484Jouwl9GNWMxcJi-pYJZjexLFMch
  DOTNET_VERSION: '8.0.x'
  PROJECT_FILE: 'DPUnity.Wpf.DpDataGrid'
  PROJECT_PATH: './src/DPUnity.Wpf.DpDataGrid.csproj'
  PACKAGE_NAME: 'DPUnity.Wpf.DpDataGrid'

jobs:
  build-and-publish:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Authenticate to GitHub Packages
      shell: pwsh
      run: |
        dotnet nuget remove source github || echo "No existing 'github' source found."
        dotnet nuget add source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" `
          --name github `
          --username "${{ github.repository_owner }}" `
          --password "${{ secrets.GIT_TOKEN }}" `
          --store-password-in-clear-text

    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: Build
      run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release

    - name: Pack NuGet package
      run: dotnet pack ${{ env.PROJECT_PATH }} --configuration Release --output ./nupkg

    - name: Find .nupkg file
      id: find_nupkg
      shell: pwsh
      run: |
        $file = Get-ChildItem -Path ./nupkg -Filter *.nupkg | Select-Object -ExpandProperty FullName
        echo "NUPKG_PATH=$file" >> $env:GITHUB_ENV

    - name: Push to GitHub Packages
      shell: pwsh
      run: |
        echo "Using package: $env:NUPKG_PATH"
        dotnet nuget push "$env:NUPKG_PATH" `
          --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" `
          --api-key "${{ secrets.GIT_TOKEN }}" `
          --skip-duplicate

    - name: Get package info
      id: package_info
      shell: pwsh
      run: |
        $nupkgFile = Get-ChildItem -Path ./nupkg -Filter *.nupkg | Select-Object -First 1
        $packageName = $nupkgFile.Name -replace '\.nupkg$', ''
        echo "PACKAGE_NAME=$packageName" >> $env:GITHUB_ENV
        echo "Package: $packageName"
        
        # Extract version from package name (assuming format: PackageName.Version.nupkg)
        if ($packageName -match '\.(\d+\.\d+\.\d+(?:\.\d+)?)$') {
          $version = $matches[1]
          echo "PACKAGE_VERSION=$version" >> $env:GITHUB_ENV
          echo "Version: $version"
          echo "::set-output name=PACKAGE_VERSION::$version"
        } else {
          echo "::set-output name=PACKAGE_VERSION::"
        }
        echo "::set-output name=PACKAGE_NAME::$packageName"

    - name: Notify Discord - Success
      if: success()
      uses: sarisia/actions-status-discord@v1
      with:
        status: success
        title: "DPUnity Wpf DataGrid - Build & Publish Success"
        description: |
          **Package:** ${{ env.PACKAGE_NAME }}:${{ steps.package_info.outputs.PACKAGE_VERSION }}
        color: 0x00ff00

    - name: Notify Discord - Failed
      if: failure()
      uses: sarisia/actions-status-discord@v1
      with:
        status: failure
        title: "DPUnity Wpf DataGrid - Build & Publish Failed"
        description: |
          **Package:** ${{ env.PACKAGE_NAME }}:${{ steps.package_info.outputs.PACKAGE_VERSION }}
        color: 0xff0000

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:control="clr-namespace:DPUnity.Wpf.DpDataGrid"
                    xmlns:converters="clr-namespace:DPUnity.Wpf.DpDataGrid.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:icon="https://dpunity.com/dev/wpf/ui/controls/packicon"
                    xmlns:hc="https://handyorg.github.io/handycontrol"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:be="clr-namespace:DPUnity.Wpf.DpDataGrid.Behaviors">
    <!-- ICON -->
    <ResourceDictionary.MergedDictionaries>
        <hc:IntellisenseResources Source="/HandyControl;Component/DesignTime/DesignTimeResources.xaml" />
        <ResourceDictionary Source="/DPUnity.Wpf.DpDataGrid;component/Themes/Icons.xaml" />
        <ResourceDictionary Source="/DPUnity.Wpf.UI;component/Styles/DPUnityResources.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <SolidColorBrush x:Key="PrimaryBrush60"
                     Opacity="0.6"
                     Color="#03AB54" />
    <!-- CONVERTERS -->
    <converters:StringFormatConverter x:Key="StringFormatConverter" />
    <converters:SolidBrushToColorConverter x:Key="SolidBrushToColorConverter" />
    <converters:SumConverter x:Key="SumConverter" />
    <converters:AverageConverter x:Key="AverageConverter" />
    <converters:BooleanToWidthConverter x:Key="BooleanToWidthConverter" />
    <!-- INITIAL POPUP SIZE -->
    <sys:Double x:Key="PopupHeight">420</sys:Double>
    <sys:Double x:Key="PopupWidth">262</sys:Double>
    <sys:Boolean x:Key="StayOpen">False</sys:Boolean>
    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="Width"
                Value="{Binding ShowRowsCount, RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}, Converter={StaticResource BooleanToWidthConverter}}" />
    </Style>
    <!-- COMPACT DATAGRID CELL STYLE -->
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Padding"
                Value="4" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- PLACEHOLDER SEARCH BOX -->
    <Style x:Key="PlaceHolder"
           TargetType="{x:Type TextBox}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="SearchControlTemplate"
                                 TargetType="{x:Type TextBox}">
                    <Grid Focusable="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <!-- Col:0 SEARCH TEXTBOX -->
                        <TextBox x:Name="TextSource"
                                 Grid.Column="0"
                                 Margin="{TemplateBinding Margin}"
                                 Padding="{TemplateBinding Padding}"
                                 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                 VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                 Panel.ZIndex="2"
                                 Background="Transparent"
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 Focusable="True"
                                 FontSize="{TemplateBinding FontSize}"
                                 FontWeight="{TemplateBinding FontWeight}"
                                 Foreground="{DynamicResource PrimaryTextBrush}"
                                 MaxLength="{TemplateBinding MaxLength}"
                                 Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox x:Name="TextBoxPlaceHolder"
                                 Grid.Column="0"
                                 Margin="{TemplateBinding Margin}"
                                 Padding="{TemplateBinding Padding}"
                                 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                 VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                 Panel.ZIndex="1"
                                 Background="Transparent"
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 Focusable="False"
                                 FontSize="{TemplateBinding FontSize}"
                                 FontWeight="{TemplateBinding FontWeight}"
                                 Foreground="{DynamicResource SecondaryTextBrush}"
                                 MaxLength="{TemplateBinding MaxLength}"
                                 Text="{TemplateBinding Tag}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="Opacity"
                                            Value="0" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Text, ElementName=TextSource}"
                                                     Value="">
                                            <Setter Property="Opacity"
                                                    Value="0.5" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <!-- Col:1 BUTTON CLEAR FILTER -->
                        <Button x:Name="ClearSearchBoxBtn"
                                Grid.Column="1"
                                Margin="2"
                                Background="Transparent"
                                Command="{x:Static control:FilterDataGrid.ClearSearchBox}"
                                Focusable="False">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border Background="Transparent"
                                                        UseLayoutRounding="True">
                                                    <Viewbox>
                                                        <!-- MAGNIFIER / DELETE ICON Width="18" -->
                                                        <Path x:Name="PathButton"
                                                              Height="16"
                                                              Margin="0"
                                                              Data="{DynamicResource Delete}"
                                                              Fill="{DynamicResource PrimaryTextBrush}"
                                                              Stretch="Uniform"
                                                              Stroke="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}, Path=Foreground}"
                                                              StrokeThickness="1" />
                                                    </Viewbox>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=TextSource, Path=Text}"
                                                                 Value="">
                                                        <Setter Property="IsEnabled"
                                                                Value="False" />
                                                        <Setter TargetName="PathButton"
                                                                Property="Data"
                                                                Value="{DynamicResource Magnifier}" />
                                                        <Setter TargetName="PathButton"
                                                                Property="StrokeThickness"
                                                                Value="0" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsMouseOver"
                                                             Value="True">
                                                        <Setter Property="Cursor"
                                                                Value="Hand" />
                                                        <Setter TargetName="PathButton"
                                                                Property="StrokeThickness"
                                                                Value="1" />
                                                        <Setter TargetName="PathButton"
                                                                Property="Fill"
                                                                Value="{StaticResource DangerBrush}" />
                                                        <Setter TargetName="PathButton"
                                                                Property="Stroke"
                                                                Value="{StaticResource DangerBrush}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <!-- Col:2 SEPARATOR -->
                        <Border Grid.Column="2"
                                Width="1"
                                Margin="2,0,2,0"
                                Background="{DynamicResource BorderBrush}" />
                        <!-- Col:3 TOGGLE BUTTON -->
                        <ToggleButton Name="SearchToggleButton"
                                      Grid.Column="3"
                                      Width="21"
                                      Margin="3,0"
                                      VerticalAlignment="Stretch"
                                      Background="Transparent"
                                      Cursor="Hand"
                                      DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}}"
                                      Focusable="False"
                                      IsChecked="{Binding StartsWith, UpdateSourceTrigger=PropertyChanged}"
                                      ToolTip="{Binding Translate.Toggle}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Cursor"
                                            Value="Hand" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid Background="Transparent"
                                                      UseLayoutRounding="True">
                                                    <Viewbox>
                                                        <Path x:Name="PathToggle"
                                                              VerticalAlignment="Center"
                                                              Data="{DynamicResource Contains}"
                                                              Fill="{DynamicResource PrimaryTextBrush}"
                                                              Stretch="Uniform" />
                                                    </Viewbox>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked"
                                                             Value="True">
                                                        <Setter TargetName="PathToggle"
                                                                Property="Data"
                                                                Value="{DynamicResource StartsWith}" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver"
                                                             Value="True">
                                                        <Setter TargetName="PathToggle"
                                                                Property="Opacity"
                                                                Value="0.6" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </Grid>
                    <!-- PLACEHOLDER TEXT -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="TextSource"
                                    Property="FocusManager.FocusedElement"
                                    Value="{Binding RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=SearchToggleButton, Path=IsChecked}"
                                     Value="True">
                            <Setter TargetName="TextBoxPlaceHolder"
                                    Property="Text"
                                    Value="{Binding Translate.StartsWith, Mode=OneWay}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=SearchToggleButton, Path=IsChecked}"
                                     Value="False">
                            <Setter TargetName="TextBoxPlaceHolder"
                                    Property="Text"
                                    Value="{Binding Translate.Contains, Mode=OneWay}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- FILTERDATAGRID STYLE -->
    <Style BasedOn="{StaticResource {x:Type DataGrid}}"
           TargetType="{x:Type control:FilterDataGrid}">
        <Setter Property="be:DataGridContextMenuBehavior.RestrictToRows"
                Value="True" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="ShowRowsCount"
                Value="True" />
        <Setter Property="Background"
                Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="RowStyle"
                Value="{DynamicResource DP_DataGridRowStyle.Small}" />
        <Setter Property="Margin"
                Value="10,0,0,0" />
        <Setter Property="AlternatingRowBackground"
                Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="AlternationCount"
                Value="2" />
        <Setter Property="CanUserResizeRows"
                Value="False" />
        <Setter Property="HorizontalGridLinesBrush"
                Value="{DynamicResource BorderBrush}" />
        <Setter Property="VerticalGridLinesBrush"
                Value="{DynamicResource BorderBrush}" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="VirtualizingPanel.IsVirtualizing"
                Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode"
                Value="Recycling" />
        <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                Value="True" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="GridLinesVisibility"
                Value="Horizontal" />
        <Setter Property="ColumnHeaderHeight"
                Value="22" />
        <Setter Property="RowHeight"
                Value="29" />
        <!-- DATAGRID TEMPLATE -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="control:FilterDataGrid">
                    <Border x:Name="DatagridBorder"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid SnapsToDevicePixels="False"
                              UseLayoutRounding="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!-- CONTENT DATAGRID -->
                            <ScrollViewer x:Name="PART_ScrollViewer"
                                          Grid.Row="0"
                                          Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid Background="Transparent"
                                              ShowGridLines="False">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="20" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <!-- REMOVE ALL FILTERS BUTTON -->
                                            <Button x:Name="ButtonRemoveAll"
                                                    Grid.Row="0"
                                                    Grid.Column="2"
                                                    Width="30"
                                                    Height="22"
                                                    Margin="-5 0 0 0"
                                                    Padding="0"
                                                    BorderThickness="0"
                                                    Background="Transparent"
                                                    Command="{x:Static control:FilterDataGrid.RemoveAllFilters}"
                                                    Cursor="Hand"
                                                    ToolTip="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}, Path=Translate.RemoveAll}"
                                                    ToolTipService.Placement="Left"
                                                    ToolTipService.VerticalOffset="24">
                                                <Button.Template>
                                                    <ControlTemplate TargetType="Button">
                                                        <Border x:Name="border"
                                                                Background="{TemplateBinding Background}"
                                                                CornerRadius="4">
                                                            <ContentPresenter HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center"
                                                                              RecognizesAccessKey="True" />
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled"
                                                                     Value="False">
                                                                <Setter TargetName="border"
                                                                        Property="Opacity"
                                                                        Value="0.4" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Button.Template>
                                                <icon:PackIcon Width="16"
                                                               Kind="FilterOff"
                                                               Foreground="{DynamicResource SecondaryTextBrush}">
                                                    <icon:PackIcon.Style>
                                                        <Style TargetType="{x:Type icon:PackIcon}"
                                                               BasedOn="{StaticResource DP_IconStyle}">
                                                            <Setter Property="Opacity"
                                                                    Value="0.5" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=Button}}"
                                                                             Value="True">
                                                                    <Setter Property="Opacity"
                                                                            Value="1" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </icon:PackIcon.Style>
                                                </icon:PackIcon>
                                            </Button>
                                            <!-- SELECT ALL BUTTON -->
                                            <Border Grid.Row="0"
                                                    Grid.Column="0"
                                                    Width="{Binding ShowRowsCount, RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}, Converter={StaticResource BooleanToWidthConverter}}"
                                                    Height="22"
                                                    Padding="10"
                                                    Margin="0 0 0 -1"
                                                    BorderThickness="0 0 0 1"
                                                    BorderBrush="{DynamicResource BorderBrush}"
                                                    Background="{DynamicResource BackgroundBrush}">
                                                <Button x:Name="SelectAllButton"
                                                        Command="{x:Static DataGrid.SelectAllCommand}"
                                                        HorizontalAlignment="Stretch"
                                                        Background="Transparent">
                                                    <Button.Style>
                                                        <Style TargetType="{x:Type Button}">
                                                            <Setter Property="Visibility"
                                                                    Value="Visible" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate>
                                                                        <Border Background="Transparent" />
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </Border>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                            Grid.Row="0"
                                                                            Grid.Column="1"
                                                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                    Grid.Row="1"
                                                                    Grid.Column="0"
                                                                    Grid.ColumnSpan="2"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                                       Background="Transparent"
                                                       Grid.Row="1"
                                                       Grid.Column="2"
                                                       Style="{DynamicResource DP_VerticalScrollBarStyle}"
                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                       Orientation="Vertical"
                                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Grid Grid.Row="2"
                                                  Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                           Grid.Column="1"
                                                           Style="{DynamicResource DP_HorizontalScrollBarStyle}"
                                                           Maximum="{TemplateBinding ScrollableWidth}"
                                                           Orientation="Horizontal"
                                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter />
                            </ScrollViewer>
                            <!-- STATUS BAR & RESULT FILTER -->
                            <Border x:Name="BorderStatusBar"
                                    Grid.Row="1"
                                    Padding="4,2"
                                    Background="{DynamicResource BackgroundBrush}"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="0,1">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ShowStatusBar, RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}}"
                                                         Value="True">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <UniformGrid Columns="2"
                                             DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}}">
                                    <!-- RESULT STATUS -->
                                    <TextBlock HorizontalAlignment="Left">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource StringFormatConverter}"
                                                          ConverterParameter="Culture">
                                                <Binding Path="Translate.Status" />
                                                <Binding Path="Items.Count"
                                                         UpdateSourceTrigger="PropertyChanged" />
                                                <Binding Path="ItemsSourceCount" />
                                                <Binding Path="Translate.Culture" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <!-- ELAPSED TIME -->
                                    <TextBlock HorizontalAlignment="Right">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource StringFormatConverter}"
                                                          ConverterParameter="Culture">
                                                <Binding Path="Translate.ElapsedTime"
                                                         UpdateSourceTrigger="PropertyChanged" />
                                                <Binding Path="ElapsedTime" />
                                                <Binding Path="Translate.Culture" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ShowElapsedTime}"
                                                                 Value="True">
                                                        <Setter Property="Visibility"
                                                                Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </UniformGrid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="TextBox"
                   BasedOn="{StaticResource DataGridEditingTextColumnStyle.Small}">
            </Style>
        </Style.Resources>
    </Style>
    <!-- DATAGRID COLUMN HEADER STYLE -->
    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}"
           TargetType="DataGridColumnHeader">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Padding"
                Value="12,0" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness"
                Value="0,0,1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <hc:SimplePanel>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource BackgroundBrush}"
                                Padding="{TemplateBinding Padding}">
                            <DockPanel HorizontalAlignment="Stretch"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       LastChildFill="True">
                                <ToggleButton DockPanel.Dock="Right"
                                              VerticalAlignment="Center"
                                              IsEnabled="False"
                                              Opacity="1"
                                              x:Name="ToggleButtonSortDirection">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid>
                                                <icon:PackIcon x:Name="SortIcon"
                                                               Foreground="{DynamicResource PrimaryBrush}"
                                                               Height="15"
                                                               Width="15"
                                                               Margin="0 0 0 -2" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridColumnHeader}}, Path=SortDirection}"
                                                             Value="Ascending">
                                                    <Setter TargetName="SortIcon"
                                                            Property="Kind"
                                                            Value="SortAscending" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridColumnHeader}}, Path=SortDirection}"
                                                             Value="Descending">
                                                    <Setter TargetName="SortIcon"
                                                            Property="Kind"
                                                            Value="SortDescending" />
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <ContentPresenter RecognizesAccessKey="True"
                                                  VerticalAlignment="Center"
                                                  MinWidth="20" />
                            </DockPanel>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb x:Name="PART_RightHeaderGripper"
                               HorizontalAlignment="Right"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </hc:SimplePanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding SortDirection, RelativeSource={RelativeSource Self}}"
                                     Value="{x:Null}">
                            <Setter TargetName="ToggleButtonSortDirection"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="SortDirection"
                     Value="Ascending">
                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="SortDirection"
                     Value="Descending">
                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- FILTER BUTTON CONTROLTEMPLAXTE -->
    <ControlTemplate x:Key="FilterButtonControlTemplate"
                     TargetType="{x:Type Button}">
        <Border x:Name="BorderButton"
                Background="Transparent"
                BorderThickness="0"
                UseLayoutRounding="True">
            <icon:PackIcon x:Name="Icon"
                           Kind="KeyboardArrowDown"
                           Height="14"
                           Width="14"
                           Margin="0 0 0 5"
                           Foreground="{DynamicResource PrimaryTextBrush}"
                           Style="{DynamicResource DP_IconStyle}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="control:FilterState.IsFiltered"
                     Value="True">
                <Setter TargetName="Icon"
                        Property="Kind"
                        Value="FilterOutline" />
                <Setter Property="Opacity"
                        Value="0.8" />
            </Trigger>
            <Trigger Property="control:FilterState.IsFiltered"
                     Value="False">
                <Setter TargetName="Icon"
                        Property="Kind"
                        Value="KeyboardArrowDown" />
                <Setter Property="Opacity"
                        Value="0.5" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Opacity"
                        Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- DATATEMPLATE OF DATAGRID COLUMN HEADER -->
    <DataTemplate x:Key="DataGridHeaderTemplate">
        <!-- HEADER STRECH TO CONTENTPRESENTER OF DATAGRIDCOLUMNHEADER -->
        <Grid x:Name="ContainerFilterGrid"
              Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}, Mode=FindAncestor, AncestorLevel=1}, Path=ActualWidth}">
            <!-- HEADER/BUTTON -->
            <Grid x:Name="GridHeaderButton"
                  ShowGridLines="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <!-- RENDER THE HEADER CONTENT -->
                <ContentPresenter Grid.Column="0"
                                  VerticalAlignment="Center"
                                  Content="{Binding}" />
                <!--
                    FILTER BUTTON
                    FilterState.IsFiltered => Attached Property : see FilterHelpers.cs
                -->
                <Button Name="FilterButton"
                        Grid.Column="1"
                        Width="20"
                        Height="20"
                        Margin="0,0,-2,0"
                        control:FilterState.IsFiltered="False"
                        Command="{x:Static control:FilterDataGrid.ShowFilter}"
                        Cursor="Hand">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Opacity"
                                    Value="0.4" />
                            <Setter Property="Template"
                                    Value="{StaticResource FilterButtonControlTemplate}" />
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
            <!-- POPUP -->
            <Popup Name="FilterPopup"
                   AllowsTransparency="True"
                   IsOpen="False"
                   PlacementTarget="{Binding ElementName=ContainerFilterGrid}"
                   StaysOpen="{StaticResource StayOpen}">
                <Popup.Resources>
                    <!--
                    Fix default background color of border when value is not provided
                   
                    **** DOES NOT WORK if parent is a Page or UserControl (cannot find parent window) ****
                   
                    <SolidColorBrush
                        x:Key="BackgroundColor"
                        Opacity="1"
                        Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=Background, Converter={StaticResource SolidBrushToColorConverter}}" />
                   
                    Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}, Path=FilterPopupBackground},
                    TargetNullValue={StaticResource BackgroundColor}"
                    -->
                    <SolidColorBrush x:Key="BorderColor"
                                     Opacity="0.4"
                                     Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}, Path=Foreground, Converter={StaticResource SolidBrushToColorConverter}}" />
                </Popup.Resources>
                <Border x:Name="PopUpBorder"
                        Padding="0"
                        Background="{DynamicResource RegionBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="1">
                    <Grid x:Name="SizableContentGrid"
                          MinWidth="{StaticResource PopupWidth}"
                          MinHeight="{StaticResource PopupHeight}"
                          ShowGridLines="False"
                          ZIndex="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              MinWidth="32" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <!-- Row 0: BUTTON CLEAR FILTER -->
                        <Button x:Name="ClearFilterBnt"
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Margin="2,10,2,2"
                                Padding="4"
                                HorizontalAlignment="Stretch"
                                Command="{x:Static control:FilterDataGrid.RemoveFilter}"
                                Content="{Binding Path=Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridColumnHeader}}, UpdateSourceTrigger=PropertyChanged}"
                                FontSize="13"
                                Foreground="{DynamicResource SecondaryTextBrush}"
                                TabIndex="0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border x:Name="BorderContent"
                                                        Padding="{TemplateBinding Padding}"
                                                        BorderBrush="Transparent"
                                                        BorderThickness="0.5"
                                                        UseLayoutRounding="True">
                                                    <Grid x:Name="ContentGrid"
                                                          Background="Transparent"
                                                          UseLayoutRounding="True">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Path Grid.Column="0"
                                                              Width="16"
                                                              Margin="0,0,10,0"
                                                              HorizontalAlignment="Center"
                                                              Data="{DynamicResource FilterDelete}"
                                                              Fill="{TemplateBinding Foreground}"
                                                              Stretch="Uniform" />
                                                        <TextBlock x:Name="ContentPresenter"
                                                                   Grid.Column="1"
                                                                   HorizontalAlignment="Stretch"
                                                                   DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}}">
                                                            <TextBlock.Text>
                                                                <MultiBinding Converter="{StaticResource StringFormatConverter}"
                                                                              ConverterParameter="Culture">
                                                                    <MultiBinding.Bindings>
                                                                        <Binding Path="Translate.Clear"
                                                                                 TargetNullValue=""
                                                                                 UpdateSourceTrigger="PropertyChanged" />
                                                                        <Binding ElementName="ClearFilterBnt"
                                                                                 Path="Content" />
                                                                        <Binding Path="Translate.Culture" />
                                                                    </MultiBinding.Bindings>
                                                                </MultiBinding>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver"
                                                             Value="True">
                                                        <Setter TargetName="BorderContent"
                                                                Property="Opacity"
                                                                Value="0.7" />
                                                        <Setter Property="Cursor"
                                                                Value="Hand" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed"
                                                             Value="True">
                                                        <Setter Property="Opacity"
                                                                Value="0.5" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                                                             Value="False">
                                                        <Setter Property="Opacity"
                                                                Value="0.5" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <!-- Row 1: SEPARATOR / SEARCH BOX -->
                        <Grid Grid.Row="1"
                              Grid.ColumnSpan="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <!-- Row 1: SEPARATOR -->
                            <Separator Grid.Row="0"
                                       Margin="5,2"
                                       Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}, Mode=FindAncestor, AncestorLevel=1}, Path=BorderBrush}" />
                            <!-- Row 2: SEARCH BOX -->
                            <Border Grid.Row="1"
                                    Margin="5,4,4,5"
                                    Padding="0,2"
                                    VerticalAlignment="Top"
                                    Background="Transparent"
                                    BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}, Mode=FindAncestor, AncestorLevel=1}, Path=BorderBrush}"
                                    BorderThickness="1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="SearchBox"
                                             Grid.Column="0"
                                             Margin="0"
                                             Padding="2,0,0,0"
                                             HorizontalAlignment="Stretch"
                                             VerticalContentAlignment="Center"
                                             AcceptsReturn="False"
                                             DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}}"
                                             Focusable="True"
                                             FontSize="13"
                                             Style="{StaticResource PlaceHolder}"
                                             TabIndex="1"
                                             Tag="{Binding Translate.Contains}">
                                        <TextBox.InputBindings>
                                            <KeyBinding Key="Enter"
                                                        Command="{x:Static control:FilterDataGrid.ApplyFilter}" />
                                        </TextBox.InputBindings>
                                    </TextBox>
                                </Grid>
                            </Border>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}, Path=FieldType}"
                                                     Value="{x:Type sys:Boolean}">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>
                        <!-- Row 2, Col 1 : (LISTBOX/TREEVIEW) -->
                        <Grid x:Name="GridItemControl"
                              Grid.Row="2"
                              Grid.ColumnSpan="2"
                              Margin="5"
                              DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}}">
                            <ListBox x:Name="PopupListBox"
                                     Grid.Row="0"
                                     Padding="2"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch"
                                     control:ScrollToTopBehavior.ScrollToTop="True"
                                     Background="Transparent"
                                     BorderBrush="{StaticResource BorderBrush}"
                                     BorderThickness="1"
                                     ItemsSource="{Binding ListBoxItems, UpdateSourceTrigger=PropertyChanged}"
                                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     TabIndex="2">
                                <ListBox.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource {x:Type ListBoxItem}}"
                                           TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="HorizontalContentAlignment"
                                                Value="Left" />
                                        <Setter Property="VerticalContentAlignment"
                                                Value="Center" />
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type control:FilterItem}">
                                        <CheckBox x:Name="CheckBox"
                                                  HorizontalAlignment="Stretch"
                                                  HorizontalContentAlignment="Stretch"
                                                  Command="{x:Static control:FilterDataGrid.IsChecked}"
                                                  CommandParameter="{Binding}"
                                                  FontWeight="Normal"
                                                  IsChecked="{Binding IsChecked}"
                                                  IsThreeState="False">
                                            <CheckBox.Content>
                                                <TextBlock>
                                                    <TextBlock.Text>
                                                        <MultiBinding Converter="{StaticResource StringFormatConverter}"
                                                                      ConverterParameter="Culture">
                                                            <Binding Path="Translate.Neutral"
                                                                     RelativeSource="{RelativeSource AncestorType={x:Type control:FilterDataGrid}}" />
                                                            <Binding Path="Label" />
                                                            <Binding Path="Translate.Culture"
                                                                     RelativeSource="{RelativeSource AncestorType={x:Type control:FilterDataGrid}}" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </CheckBox.Content>
                                        </CheckBox>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Level}"
                                                         Value="1">
                                                <Setter TargetName="CheckBox"
                                                        Property="Margin"
                                                        Value="4,0,0,0" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.Style>
                                    <Style TargetType="ListBox">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ListBoxItems.Count, UpdateSourceTrigger=PropertyChanged}"
                                                         Value="0">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.Style>
                            </ListBox>
                            <TreeView x:Name="PopupTreeview"
                                      Grid.Row="0"
                                      control:ScrollToTopBehavior.ScrollToTop="True"
                                      Background="Transparent"
                                      BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}, Mode=FindAncestor, AncestorLevel=1}, Path=BorderBrush}"
                                      BorderThickness="1"
                                      ItemsSource="{Binding TreeViewItems, UpdateSourceTrigger=PropertyChanged}"
                                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                                      TabIndex="2">
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate DataType="control:FilterItemDate"
                                                              ItemsSource="{Binding Children}">
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox x:Name="CheckBoxTree"
                                                      VerticalAlignment="Center"
                                                      Focusable="False"
                                                      Content="{Binding Label}"
                                                      IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Level}"
                                                         Value="1">
                                                <Setter TargetName="CheckBoxTree"
                                                        Property="Margin"
                                                        Value="4,0,0,0" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                                <TreeView.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource {x:Type TreeViewItem}}"
                                           TargetType="{x:Type TreeViewItem}">
                                        <Setter Property="OverridesDefaultStyle"
                                                Value="True" />
                                        <Setter Property="IsExpanded"
                                                Value="False" />
                                        <Setter Property="HorizontalContentAlignment"
                                                Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment"
                                                Value="Stretch" />
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </Style>
                                </TreeView.ItemContainerStyle>
                                <TreeView.Style>
                                    <Style TargetType="TreeView">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding TreeViewItems.Count, UpdateSourceTrigger=PropertyChanged}"
                                                         Value="0">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TreeView.Style>
                            </TreeView>
                        </Grid>
                        <!-- Row 3: OK/CANCEL BUTTON -->
                        <UniformGrid Grid.Row="3"
                                     Grid.ColumnSpan="2"
                                     Margin="0,5,4,5"
                                     HorizontalAlignment="Right"
                                     Background="Transparent"
                                     Columns="2"
                                     DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}}">
                            <Button Width="100"
                                    Margin="0"
                                    HorizontalAlignment="Left"
                                    Command="{x:Static control:FilterDataGrid.ApplyFilter}"
                                    Content="{Binding Translate.Ok}"
                                    Cursor="Hand"
                                    TabIndex="3" />
                            <Button Width="100"
                                    Margin="6,0,0,0"
                                    HorizontalAlignment="Right"
                                    Command="{x:Static control:FilterDataGrid.CancelFilter}"
                                    Content="{Binding Translate.Cancel}"
                                    Cursor="Hand"
                                    Style="{DynamicResource ButtonDanger}"
                                    TabIndex="4" />
                        </UniformGrid>
                        <!-- Row 4: RESIZE GRIP -->
                        <Thumb x:Name="PopupThumb"
                               Grid.Row="4"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Width="20"
                               Height="Auto"
                               Margin="0,0,2,2"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Style.Setters>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Grid x:Name="resizeVisual"
                                                          HorizontalAlignment="Right"
                                                          VerticalAlignment="Bottom"
                                                          Background="Transparent"
                                                          DockPanel.Dock="Right"
                                                          SnapsToDevicePixels="False"
                                                          UseLayoutRounding="True">
                                                        <Path Width="12"
                                                              Height="12"
                                                              Margin="0"
                                                              Data="{DynamicResource GripSizeIcon}"
                                                              Opacity="0.5"
                                                              Stretch="None"
                                                              Stroke="{Binding RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}, Path=Foreground}"
                                                              StrokeThickness="1" />
                                                        <Grid.Style>
                                                            <Style TargetType="{x:Type Grid}">
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver"
                                                                             Value="True">
                                                                        <Setter Property="Cursor"
                                                                                Value="SizeNWSE" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Grid.Style>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
                </Border>
            </Popup>
        </Grid>
    </DataTemplate>
    <!--dpu custom style-->
    <Style x:Key="DP_DataGridRowBaseStyle"
           TargetType="DataGridRow"
           BasedOn="{StaticResource DataGridRowStyle.Small}">
        <Setter Property="ToolTip"
                Value="{Binding StatusMessage}" />
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource PrimaryBrush60}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DP_DataGridRowStyle.Small"
           TargetType="DataGridRow"
           BasedOn="{StaticResource DP_DataGridRowBaseStyle}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="Background"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=RowBackground}" />
        <Style.Triggers>
            <Trigger Property="AlternationIndex"
                     Value="0">
                <Setter Property="Background"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=RowBackground}" />
            </Trigger>
            <Trigger Property="AlternationIndex"
                     Value="1">
                <Setter Property="Background"
                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AlternatingRowBackground}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource ThirdlyRegionBrush }" />
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource PrimaryBrush60}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--FilterGrid scrollbar styles-->
    <ControlTemplate x:Key="VerticalScrollBarTemplate"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid x:Name="ScrollBarGrid"
                  Width="15"
                  Background="{DynamicResource SecondaryRegionBrush}"
                  Margin="0 0 0 3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <RepeatButton x:Name="UpButton"
                              Command="ScrollBar.LineUpCommand"
                              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                              Margin="-7 0 0 3"
                              Foreground="{DynamicResource SecondaryTextBrush}"
                              Style="{DynamicResource DP_RepeatIconButton}">
                    <icon:PackIcon Kind="MenuUp"
                                   Style="{DynamicResource DP_IconStyle}"
                                   Width="15" />
                </RepeatButton>
                <Track Grid.Row="1"
                       Name="PART_Track"
                       IsDirectionReversed="True">
                    <Track.Thumb>
                        <Thumb Style="{DynamicResource DP_ScrollBarThumb}"
                               Width="10" />
                    </Track.Thumb>
                </Track>
                <RepeatButton x:Name="DownButton"
                              Grid.Row="2"
                              Command="ScrollBar.LineDownCommand"
                              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                              Margin="-7 0 0 3"
                              Foreground="{DynamicResource SecondaryTextBrush}"
                              Style="{DynamicResource DP_RepeatIconButton}">
                    <icon:PackIcon Kind="MenuDown"
                                   Style="{DynamicResource DP_IconStyle}"
                                   Width="15" />
                </RepeatButton>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="False">
                <Setter TargetName="ScrollBarGrid"
                        Property="Width"
                        Value="3" />
                <Setter TargetName="UpButton"
                        Property="Visibility"
                        Value="Hidden" />
                <Setter TargetName="DownButton"
                        Property="Visibility"
                        Value="Hidden" />
                <Setter TargetName="PART_Track"
                        Property="HorizontalAlignment"
                        Value="Left" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="DP_VerticalScrollBarStyle"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Orientation"
                Value="Vertical" />
        <Setter Property="Template"
                Value="{StaticResource VerticalScrollBarTemplate}" />
    </Style>
    <ControlTemplate x:Key="HorizontalScrollBarTemplate"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid x:Name="HorizontalScrollBarGrid"
                  Height="0"
                  Background="{DynamicResource SecondaryRegionBrush}">
                <Track Name="PART_Track"
                       MinWidth="50">
                    <Track.Thumb>
                        <Thumb Style="{DynamicResource DP_HorizontalScrollBarThumb}"
                               Height="8" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Visibility"
                     Value="Visible">
                <Setter TargetName="HorizontalScrollBarGrid"
                        Property="Height"
                        Value="12" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Visibility"
                               Value="Visible" />
                    <Condition Property="IsMouseOver"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="HorizontalScrollBarGrid"
                        Property="Height"
                        Value="3" />
                <Setter TargetName="PART_Track"
                        Property="VerticalAlignment"
                        Value="Bottom" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="DP_HorizontalScrollBarStyle"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Orientation"
                Value="Horizontal" />
        <Setter Property="Template"
                Value="{StaticResource HorizontalScrollBarTemplate}" />
    </Style>
    <Style x:Key="DP_ScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{DynamicResource BorderBrush}"
                            Width="10"
                            CornerRadius="2"
                            HorizontalAlignment="Center" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DP_HorizontalScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{DynamicResource BorderBrush}"
                            Height="10"
                            CornerRadius="2"
                            VerticalAlignment="Center" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DP_RepeatIconButton"
           TargetType="RepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DP_GroupByHeaderStyle"
           TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander x:Name="Expander"
                              MinHeight="35">
                        <Expander.Header>
                            <StackPanel>
                                <DockPanel>
                                    <TextBlock Text="{Binding Name}"
                                               FontWeight="Bold" />
                                    <TextBlock Text=" [" />
                                    <TextBlock Text="{Binding ItemCount}" />
                                    <TextBlock Text=" item(s)]" />
                                </DockPanel>
                                <DockPanel x:Name="SumValue">
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource SumConverter}">
                                                <Binding Path="." />
                                                <Binding Path="ColumnSumOnGroupBy"
                                                         RelativeSource="{RelativeSource AncestorType={x:Type control:FilterDataGrid}}" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DockPanel>
                                <DockPanel x:Name="AverageValue">
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource AverageConverter}">
                                                <Binding Path="." />
                                                <Binding Path="ColumnAverageOnGroupBy"
                                                         RelativeSource="{RelativeSource AncestorType={x:Type control:FilterDataGrid}}" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DockPanel>
                            </StackPanel>
                        </Expander.Header>
                        <ItemsPresenter />
                    </Expander>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ColumnSumOnGroupBy, RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}}"
                                     Value="">
                            <Setter TargetName="SumValue"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ColumnAverageOnGroupBy, RelativeSource={RelativeSource AncestorType={x:Type control:FilterDataGrid}}}"
                                     Value="">
                            <Setter TargetName="AverageValue"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VirtualizingPanel.IsVirtualizing"
                Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode"
                Value="Recycling" />
        <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                Value="True" />
    </Style>
    <Style x:Key="DP_DataGridCheckBoxCell"
           BasedOn="{StaticResource DataGridCellStyle}"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Grid HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <CheckBox Style="{DynamicResource DP_CheckBox}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>